apply plugin: 'java'
apply plugin: 'eclipse'

version = '1.0'

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
}

jar {
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  from 'jni/libVideoState.so'
  manifest {
    attributes 'Main-Class' : 'mobileworkloads.jlagmarker.JLagmarkerMain',
               'Implementation-Title' : 'JLagmarker',
               'Implementation-Version' : version
  }
}

configurations {
    noExport
}
repositories {
  mavenCentral()
}

dependencies {
   compile group: 'nz.ac.waikato.cms.weka', name: 'weka-stable', version: '3.6.6'
   compile files('lib/algovResourceTools.jar')
}

task buildNative(type: Exec, description: 'Compile JNI source') {
    def ndkDir = "./jni"
    commandLine "make", "-C", "$ndkDir"
}

task cleanNative(type: Exec, description: 'Clean JNI object files') {
    def ndkDir = "./jni"
    commandLine "make", "-C", "$ndkDir", "clean"
}

task unzipLibav(type: Copy, description: 'Unpack libav library files') {
    def zipFile = file('lib/libav-0.8.16.zip')
    def outputDir = file("lib/libav-0.8.16")
 
    from zipTree(zipFile)
    into outputDir
}

task cleanLibav(type: Exec, description: 'Remove libav library files') {
    commandLine "rm","-rf","lib/libav-0.8.16"
}


clean.dependsOn 'cleanNative','cleanLibav' 

compileJava.finalizedBy buildNative
compileJava.finalizedBy unzipLibav
buildNative.mustRunAfter compileJava
buildNative.mustRunAfter unzipLibav


task wrapper(type: Wrapper) {
	gradleVersion = '2.4'
}

eclipse {
  classpath {
    defaultOutputDir = file('build-eclipse')
    downloadSources = true
    downloadJavadoc = true
  }
}
